// Generated by gencpp from file uuv_gazebo_ros_plugins_msgs/SetThrusterState.msg
// DO NOT EDIT!


#ifndef UUV_GAZEBO_ROS_PLUGINS_MSGS_MESSAGE_SETTHRUSTERSTATE_H
#define UUV_GAZEBO_ROS_PLUGINS_MSGS_MESSAGE_SETTHRUSTERSTATE_H

#include <ros/service_traits.h>


#include <uuv_gazebo_ros_plugins_msgs/SetThrusterStateRequest.h>
#include <uuv_gazebo_ros_plugins_msgs/SetThrusterStateResponse.h>


namespace uuv_gazebo_ros_plugins_msgs
{

struct SetThrusterState
{

typedef SetThrusterStateRequest Request;
typedef SetThrusterStateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SetThrusterState
} // namespace uuv_gazebo_ros_plugins_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::uuv_gazebo_ros_plugins_msgs::SetThrusterState > {
  static const char* value()
  {
    return "7abefa06f2be45ab014b8164e7591960";
  }

  static const char* value(const ::uuv_gazebo_ros_plugins_msgs::SetThrusterState&) { return value(); }
};

template<>
struct DataType< ::uuv_gazebo_ros_plugins_msgs::SetThrusterState > {
  static const char* value()
  {
    return "uuv_gazebo_ros_plugins_msgs/SetThrusterState";
  }

  static const char* value(const ::uuv_gazebo_ros_plugins_msgs::SetThrusterState&) { return value(); }
};


// service_traits::MD5Sum< ::uuv_gazebo_ros_plugins_msgs::SetThrusterStateRequest> should match
// service_traits::MD5Sum< ::uuv_gazebo_ros_plugins_msgs::SetThrusterState >
template<>
struct MD5Sum< ::uuv_gazebo_ros_plugins_msgs::SetThrusterStateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::uuv_gazebo_ros_plugins_msgs::SetThrusterState >::value();
  }
  static const char* value(const ::uuv_gazebo_ros_plugins_msgs::SetThrusterStateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::uuv_gazebo_ros_plugins_msgs::SetThrusterStateRequest> should match
// service_traits::DataType< ::uuv_gazebo_ros_plugins_msgs::SetThrusterState >
template<>
struct DataType< ::uuv_gazebo_ros_plugins_msgs::SetThrusterStateRequest>
{
  static const char* value()
  {
    return DataType< ::uuv_gazebo_ros_plugins_msgs::SetThrusterState >::value();
  }
  static const char* value(const ::uuv_gazebo_ros_plugins_msgs::SetThrusterStateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::uuv_gazebo_ros_plugins_msgs::SetThrusterStateResponse> should match
// service_traits::MD5Sum< ::uuv_gazebo_ros_plugins_msgs::SetThrusterState >
template<>
struct MD5Sum< ::uuv_gazebo_ros_plugins_msgs::SetThrusterStateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::uuv_gazebo_ros_plugins_msgs::SetThrusterState >::value();
  }
  static const char* value(const ::uuv_gazebo_ros_plugins_msgs::SetThrusterStateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::uuv_gazebo_ros_plugins_msgs::SetThrusterStateResponse> should match
// service_traits::DataType< ::uuv_gazebo_ros_plugins_msgs::SetThrusterState >
template<>
struct DataType< ::uuv_gazebo_ros_plugins_msgs::SetThrusterStateResponse>
{
  static const char* value()
  {
    return DataType< ::uuv_gazebo_ros_plugins_msgs::SetThrusterState >::value();
  }
  static const char* value(const ::uuv_gazebo_ros_plugins_msgs::SetThrusterStateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // UUV_GAZEBO_ROS_PLUGINS_MSGS_MESSAGE_SETTHRUSTERSTATE_H
